<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedCSharp.template.tt"#>
<#

var prop = host.CurrentType.AsOdcmProperty();
var @namespace = prop.Class.AsOdcmClass().Namespace.GetNamespaceName();

var derivedTypeConverterTypeName = @namespace.GetCoreLibraryType("DerivedTypeConverter");

var entityName = prop.Class.Name.ToCheckedCase();
var propName = prop.Name.ToCheckedCase();
var collectionResponse = string.Concat(entityName, propName, "CollectionWithReferencesResponse");
var collectionPage = string.Concat(entityName, propName, "CollectionWithReferencesPage");

#>
namespace <#=@namespace#>
{
    using System.Collections.Generic;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type <#=collectionResponse#>.
    /// </summary>
    public class <#=collectionResponse#>
    {
        /// <summary>
        /// Gets or sets the <see cref="I<#=collectionPage#>"/> value.
        /// </summary>
        [JsonPropertyName("value")]
        public I<#=collectionPage#> Value { get; set; }

        /// <summary>
        /// Gets or sets the nextLink string value.
        /// </summary>
        [JsonPropertyName("@odata.nextLink")]
        [JsonConverter(typeof(NextLinkConverter))]
        public string NextLink { get; set; }

        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }
    }
}
